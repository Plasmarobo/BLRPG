sk_aim = SkillTemplate.create(name: "Aim", skill_type: "Free", duration: 0, cooldown: nil, description: "Make a basic ranged attack with a weapon.", prerequisites: nil)
sk_carefulaim = SkillTemplate.create(name: "Careful Aim", skill_type: "Basic", duration: 0, cooldown: 3, description: "Increase the accuracy of ranged attacks by 3", prerequisites: "Finesse")
sk_steadyaim = SkillTemplate.create(name: "Steady Aim", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "If a character takes no movement in a turn, the accuracy of ranged attacks is increased by 2, this bonus stacks with other bonuses from skills", prerequisites: "Careful Aim")
sk_sniper = SkillTemplate.create(name: "Sniper", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Improves the accuracy bonus granted by Steady Aim to 4", prerequisites: "Steady Aim")
sk_cripplingshot = SkillTemplate.create(name: "Crippling Shot", skill_type: "Advanced", duration: 3, cooldown: 5, description: "Make a basic attack with 1 called effect from the following list: Slow (-1), Paralyze (-3), Disarm (-5). Each is associated with a penalty to the attack pool. You must declare the effect before rolling to hit. If the attack is a hit, you apply the effect instead of dealing damage. The effect applied lasts for the duration of this skill.", prerequisites: "Sniper")
sk_deadeye = SkillTemplate.create(name: "Deadeye", skill_type: "Instant", duration: 3, cooldown: 5, description: "Add 5 stacks of Deadeye. Stacks last for 3 Turns (until skill duration ends). A character may use a stack of Deadeye to recieve a +1 bonus on an aim check.", prerequisites: "Finesse, Level 8")
sk_showdown = SkillTemplate.create(name: "Showdown", skill_type: "Defining", duration: 3, cooldown: 5, description: "Each time an attack deals damage, gain a stack of Deadeye. All stacks of Deadeye are removed when this skill enters cooldown. ", prerequisites: "Deadeye, Gun-Juggler")
sk_overwatch = SkillTemplate.create(name: "Overwatch", skill_type: "Basic", duration: 1, cooldown: 3, description: "Choose either an action or an area. The first time an enemy or neutral character takes the action or enters the area before the start of your next turn, you may make a basic attack against them if you are able. An area is considered a cone which extends from the character up to the current weapon range (+- 45 degrees from a selected point). ", prerequisites: nil)
sk_sprayandpray = SkillTemplate.create(name: "Spray and Pray", skill_type: "Basic", duration: 0, cooldown: 3, description: "As part of a move action, you may make as many attacks as your weapon allows. You may not use your action to make any additional attack actions (any action which rolls an accuracy pool). Take a -2 penalty to your accuracy pool when using this skill.", prerequisites: "Level 3")
sk_itchytriggerfinger = SkillTemplate.create(name: "Itchy Trigger Finger", skill_type: "Advanced", duration: nil, cooldown: nil, description: "When weilding a rapid weapon, increase it's rapid number by 1.", prerequisites: "Spray and Pray")
sk_steadyhands = SkillTemplate.create(name: "Steady Hands", skill_type: "Passive", duration: nil, cooldown: nil, description: "Recoil from weapons is reduced by 1.", prerequisites: "Itchy Trigger Finger")
sk_bulletstorm = SkillTemplate.create(name: "Bulletstorm", skill_type: "Defining", duration: 3, cooldown: 8, description: "For each ranged attack you make, select a second target within 2 spaces. Make the attack against that target as well. The attacks are identical, any modifications appled to the first also apply to the second.", prerequisites: nil)
sk_penetratingshot = SkillTemplate.create(name: "Penetrating Shot", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When you use Called shot, reduce targets armor value by 5 for the first attack. This cannot reduce armor below zero.", prerequisites: "Called-shot")
sk_strike = SkillTemplate.create(name: "Strike", skill_type: "Free", duration: 0, cooldown: nil, description: "Make a basic melee attack with a weapon.", prerequisites: nil)
sk_readystrike = SkillTemplate.create(name: "Ready Strike", skill_type: "Basic", duration: 1, cooldown: 3, description: "When a character spends movement adjacent to you during the duration of this skill you may choose to make a basic attack. You may only make one such attack until the start of your next turn.", prerequisites: nil)
sk_aid = SkillTemplate.create(name: "Aid", skill_type: "Free", duration: 0, cooldown: nil, description: "You may use your action to restore 1 health to an adjacent ally.", prerequisites: nil)
sk_cauterize = SkillTemplate.create(name: "Cauterize", skill_type: "Basic", duration: 0, cooldown: 3, description: "Use your weapon to heal an ally. The range of this skill is equal to the range of your current weapon. The power of this skill is equal to half the damage of your currently equiped weapon, rounded down, with a minimum healing power of 1. If your weapon is rapid, you may multiply the healing effect by the rapid number minus any recoil incurred. ", prerequisites: "Aid")
sk_defribulatinground = SkillTemplate.create(name: "Defribulating Round", skill_type: "Basic", duration: 0, cooldown: 5, description: "You may revive an ally at range equal to your currently equiped weapon. The ally regains health from zero equal to the damage of your currenty equiped weapon.", prerequisites: "Cauterize")
sk_fortify = SkillTemplate.create(name: "Fortify", skill_type: "Basic", duration: 3, cooldown: 5, description: "Gain 2 armor. Effect ends if movement is spent or skill duration ends.", prerequisites: nil)
sk_hasten = SkillTemplate.create(name: "Hasten", skill_type: "Basic", duration: 0, cooldown: 3, description: "Using your action you may double the movement of any target for one turn.", prerequisites: nil)
sk_summonally = SkillTemplate.create(name: "Summon Ally", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your obediance cap becomes 6, and you may select minions from the medium minion list.", prerequisites: "Summon Minion, Level 5")
sk_summonpatron = SkillTemplate.create(name: "Summon Patron", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your obediance cap becomes 9, and you may select minions from the large minion list.", prerequisites: "Summon Ally, Level 8")
sk_minionstrike = SkillTemplate.create(name: "Minion Strike", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "A minion may make an attack as an action with accuracy 5 and damage 2 when you spend 1 obediance.", prerequisites: "Summon Minion")
sk_minionbounce = SkillTemplate.create(name: "Minion Bounce", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When a minion makes a melee attack, it may then move up to half it's speed when you spend 1 obediance.", prerequisites: "Minion Strike")
sk_minionchain = SkillTemplate.create(name: "Minion Chain", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Whenever a minion attacks and hits with a melee attack, you may spend 1 obediance, if you do it may move up to it's speed and attack again.", prerequisites: "Minion Bounce, Level 5")
sk_minionelement = SkillTemplate.create(name: "Minion Element", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may spend 1 obediance to increase the next minion's attack's element number by 3 (if they would have an elemental effect)", prerequisites: "Minion Strike")
sk_igneousminion = SkillTemplate.create(name: "Igneous Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attacks may be considered Fire-skill_typed (declare before rolling to attack)", prerequisites: "Minion Element")
sk_chargedminion = SkillTemplate.create(name: "Charged Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attacks may be considered Shock-skill_typed (declare before rolling to attack)", prerequisites: "Minion Element")
sk_alkalineminion = SkillTemplate.create(name: "Alkaline Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attacks may be considered Caustic-skill_typed (declare before rolling to attack)", prerequisites: "Minion Element")
sk_frostedminion = SkillTemplate.create(name: "Frosted Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attacks may be considered Cryo-skill_typed attacks (declare before rolling to attack)", prerequisites: "Minion Element")
sk_slaggingminion = SkillTemplate.create(name: "Slagging Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attacks may be considered Slag-skill_typed attacks (declare before rolling to attack)", prerequisites: "Minion Element")
sk_minionprime = SkillTemplate.create(name: "Minion Prime", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "One minion you summon may be desegnated Prime. Prime Minions receive +3 accuracy pool, +2 damage, +3 elemental number.", prerequisites: "Minion Strike, Level 8")
sk_carefulminion = SkillTemplate.create(name: "Careful Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion accuracy increases by 5", prerequisites: "Minion Strike, Level 5")
sk_deadlyminion = SkillTemplate.create(name: "Deadly Minion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Minion attack damage increases by 3", prerequisites: "Minion Strike, Level 5")
sk_beastmaster = SkillTemplate.create(name: "Beastmaster", skill_type: "Defining", duration: nil, cooldown: nil, description: "You may spend 3 obediance to tame 1 beast-skill_typed creature. Tamed creatures count towards your minion cap and revert to their initial state when you run out of obediance.", prerequisites: "Summon Minion, Level 5")
sk_menagerie = SkillTemplate.create(name: "Menagerie", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your minion cap improves to 3.", prerequisites: "Summon Minion, Leve 5")
sk_synergisticlink = SkillTemplate.create(name: "Synergistic Link", skill_type: "Upgrade", duration: 1, cooldown: 3, description: "You may use an action to cause your minion to take an immediate action without spending obediance.", prerequisites: "Summon Minion, Level 3")
sk_bulk = SkillTemplate.create(name: "Bulk", skill_type: "Passive", duration: nil, cooldown: nil, description: "Gain 6 Hitpoints", prerequisites: nil)
sk_toughness = SkillTemplate.create(name: "Toughness", skill_type: "Passive", duration: nil, cooldown: nil, description: "Gain 6 Hitpoints", prerequisites: "Bulk")
sk_musclebound = SkillTemplate.create(name: "Musclebound", skill_type: "Basic", duration: 3, cooldown: 5, description: "All damage taken is halved. Heal 3 hitpoints at the end of your turn. This effect ends if movement is taken while active.", prerequisites: "Toughness")
sk_bastion = SkillTemplate.create(name: "Bastion", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Bulk and Toughness Grant 12 hitpoints instead of 6.", prerequisites: "Bulk")
sk_diehard = SkillTemplate.create(name: "Diehard", skill_type: "Passive", duration: nil, cooldown: nil, description: "When you are downed, you may either move 1 space, or make a basic attack.", prerequisites: nil)
sk_ironchurch = SkillTemplate.create(name: "Iron Church", skill_type: "Advanced", duration: nil, cooldown: nil, description: "Bulk and Toughness Grant 24 hitpoints instead of 6. At the start of each combat you gain 5 stacks of Iron. Each stack of Iron grants +1 dmg to melee attacks. Lose a stack of iron if you take damage during a turn (immediately, the first time you take damage). ", prerequisites: "Bastion")
sk_flex = SkillTemplate.create(name: "Flex", skill_type: "Upgrade", duration: 0, cooldown: 3, description: "You may spend stacks of Iron to Flex. All creatures in a burst of radius 1 become blinded and slowed. For each stack of Iron you spend, increase the radius by 1. ", prerequisites: "Iron Church")
sk_onehandedwonder = SkillTemplate.create(name: "One handed Wonder", skill_type: "Passive", duration: nil, cooldown: nil, description: "Smgs, and Assault Rifles may be used in one hand", prerequisites: "Bulk")
sk_gunzerking = SkillTemplate.create(name: "Gunzerking", skill_type: "Defining", duration: 3, cooldown: 5, description: "You may immediately equip a second Pistol, Revolve, Smg, or Assault Rifle. Both equipped weapons may be used in an attack at half accuracy.", prerequisites: "One handed Wonder")
sk_rage = SkillTemplate.create(name: "Rage", skill_type: "Basic", duration: nil, cooldown: 5, description: "Gain 3 stacks of rage. Lose one stack of rage at the end of your turn. While you have at least one stack of rage your accuracy pools are reduced by 2, but your melee attacks do +4 damage. And you ignore the first 2 points of damage applied to your health each turn. While raging you cannot use proficiencies, and every enemy is considered aware of you.", prerequisites: "Toughness")
sk_unignorable = SkillTemplate.create(name: "Unignorable", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When raging, enemies must target you. Ignore the first 8 points of damage received per turn, instead of 2.", prerequisites: "Rage")
sk_unstoppable = SkillTemplate.create(name: "Unstoppable", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may spend a stack of rage to deal +4 damage to any melee attack. ", prerequisites: "Rage")
sk_unbreakable = SkillTemplate.create(name: "Unbreakable", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may spend a stack of rage to ignore all damage taken this turn.", prerequisites: "Rage")
sk_hellhathnofury = SkillTemplate.create(name: "Hell hath no Fury", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using rage, gain an additional 5 stacks of rage.", prerequisites: "Rage, Level 8")
sk_juggernaut = SkillTemplate.create(name: "Juggernaut", skill_type: "Defining", duration: 3, cooldown: 8, description: "Ignore all incoming damage while active. Instead every 2 points of damage gives you a stack of fatigue. Each stack of fatigue reduces your movment by 1. Stacks of fatigue are removed at the end of your turn. While active, you recieve +4 to accuracy and +6 to damage when performing a melee attack.", prerequisites: "Unbreakable, Rage, Level 8")
sk_tackle = SkillTemplate.create(name: "Tackle", skill_type: "Basic", duration: 0, cooldown: 3, description: "Use this skill only on a turn when you move in a straight line. Make a melee attack. For each space moved this turn, receive +1 to the damage of that attack.", prerequisites: nil)
sk_bullrush = SkillTemplate.create(name: "Bullrush", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When tackle is used, you may push move the target up to half the distance you moved this turn in the direction of your movement.", prerequisites: "Tackle")
sk_hammerthrow = SkillTemplate.create(name: "Hammerthrow", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When tackle is used, the target takes 2 points of damage for each space they are moved.", prerequisites: "Bullrush")
sk_finesse = SkillTemplate.create(name: "Finesse", skill_type: "Passive", duration: nil, cooldown: nil, description: "The accuracy of ranged attacks is increased by 1", prerequisites: nil)
sk_spotter = SkillTemplate.create(name: "Spotter", skill_type: "Passive", duration: nil, cooldown: nil, description: "The accuracy pools of adjacent allies is increased by 2", prerequisites: nil)
sk_dodge = SkillTemplate.create(name: "Dodge", skill_type: "Defensive", duration: nil, cooldown: 1, description: "Recieve +2 to dodge bonus against the current attack", prerequisites: "Finesse")
sk_evasive = SkillTemplate.create(name: "Evasive", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "The bonus granted by Dodge increases to 4", prerequisites: "Dodge")
sk_dexterity = SkillTemplate.create(name: "Dexterity", skill_type: "Passive", duration: nil, cooldown: nil, description: "The accuracy of ranged attacks is increased by 2. Additional recieve an automatic +1 dodge bonus against all attacks", prerequisites: "Evasive")
sk_shieldcharge = SkillTemplate.create(name: "Shield Charge", skill_type: "Defensive", duration: 3, cooldown: 5, description: "Gain armor 1. For every 2 points of damage recieved gain 1 movement for your next turn.", prerequisites: nil)
sk_uncannyreflex = SkillTemplate.create(name: "Uncanny Reflex", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "The first time you use dodge on a turn, cooldown is not incurred", prerequisites: "Dodge")
sk_rush = SkillTemplate.create(name: "Rush", skill_type: "Basic", duration: 0, cooldown: 3, description: "You must move at least 4 spaces in a straight line before making a basic melee attack. Your attack is made with +1 damage.", prerequisites: nil)
sk_sideswipe = SkillTemplate.create(name: "Sideswipe", skill_type: "Instant", duration: nil, cooldown: 1, description: "If you successfully hit a target, you may immediately move 2 spaces.", prerequisites: "Rush")
sk_murderchain = SkillTemplate.create(name: "Murder Chain", skill_type: "Passive", duration: "", cooldown: nil, description: "Whenever you kill an opponent, you may move to, and make a basic melee attack against an opponent within 2 spaces.", prerequisites: "Sideswipe")
sk_toofasttolive = SkillTemplate.create(name: "Too Fast to Live", skill_type: "Defining", duration: 3, cooldown: 5, description: "Whenever you successfully hit an opponent with an attack, you may move to and make a basic attack against an opponent within 2 squares of your target. You may not make more than 5 such attacks in a single turn.", prerequisites: "Murder Chain")
sk_splittingstrike = SkillTemplate.create(name: "Splitting Strike", skill_type: "Basic", duration: 0, cooldown: 3, description: "Instead of dealing damage, when splitting strike is used you may choose to instead reduce the targets armor value by 1 for the rest of the combat.", prerequisites: nil)
sk_piercingstrikes = SkillTemplate.create(name: "Piercing Strikes", skill_type: "Passive", duration: nil, cooldown: nil, description: "When making a melee attack, your enemies armor value is reduced by 1. Cannot reduce armor value below 0.", prerequisites: nil)
sk_canopener = SkillTemplate.create(name: "Can Opener", skill_type: "Basic", duration: 0, cooldown: 3, description: "Make a melee attack against an armored target. This attack deal no damage to health. Instead reduce the target's armor value by the damage that would be dealt. This reduction does NOT stack with other armor-reducing effect (choose the larger effect, ignore the smaller).", prerequisites: "Piercing Strikes")
sk_piercetheheavens = SkillTemplate.create(name: "Pierce The Heavens", skill_type: "Advanced", duration: 0, cooldown: 5, description: "Make a melee attack. Ignore shields and armor.", prerequisites: "Can Opener, Level 5")
sk_resistance = SkillTemplate.create(name: "Resistance", skill_type: "Defensive", duration: nil, cooldown: 1, description: "You recieve +2 restance against elemental effects.", prerequisites: nil)
sk_elementalendurance = SkillTemplate.create(name: "Elemental Endurance", skill_type: "Defensive", duration: nil, cooldown: 1, description: "You may roll your endurance pool and add it to your elemental resistance", prerequisites: "Resistance")
sk_hardy = SkillTemplate.create(name: "Hardy", skill_type: "Passive", duration: nil, cooldown: nil, description: "Recieve +1 resistance", prerequisites: "Level 3")
sk_stoic = SkillTemplate.create(name: "Stoic", skill_type: "Passive", duration: nil, cooldown: nil, description: "Recieve +3 resistance", prerequisites: "Level 5")
sk_indominable = SkillTemplate.create(name: "Indominable", skill_type: "Passive", duration: nil, cooldown: nil, description: "Recieve +6 resistance", prerequisites: "Level 8")
sk_situationalawareness = SkillTemplate.create(name: "Situational Awareness", skill_type: "Passive", duration: nil, cooldown: nil, description: "You cannot be caught unaware", prerequisites: "Level 5")
sk_pickpocket = SkillTemplate.create(name: "Pickpocket", skill_type: "Passive", duration: nil, cooldown: nil, description: "When you hit a target with a melee attack, you may choose to instead attempt to pickpocket them. If you do, the VL will roll to determine what loot you recieve (if any). When you pickpocket, you deal no damage.", prerequisites: "Finesse")
sk_plant = SkillTemplate.create(name: "Plant", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When you use pickpocket, you may instead place an item into someone's inventory.", prerequisites: "Pickpocket")
sk_sneakattack = SkillTemplate.create(name: "Sneak Attack", skill_type: "Passive", duration: nil, cooldown: nil, description: "When you score a hit against a target who is unaware of you, damage for the attack is doubled. That target is now considered aware of you, even on a miss.", prerequisites: "Finesse")
sk_decoy = SkillTemplate.create(name: "Decoy", skill_type: "Basic", duration: 3, cooldown: 5, description: "Create a holographic clone of you in the space in front of you. All targets are considered unaware of you for the duration of the skill. The effect ends if you make an attack.", prerequisites: "Finesse")
sk_cripplingstrike = SkillTemplate.create(name: "Crippling Strike", skill_type: "Advanced", duration: 0, cooldown: 5, description: "If you hit with a Sneak Attack, your target becomes stunned until the end of it's next turn.", prerequisites: "Sneak Attack")
sk_weepingblade = SkillTemplate.create(name: "Weeping Blade", skill_type: "Advanced", duration: 0, cooldown: 3, description: "If you hit with a melee attack you may convert damage into stacks of bleed. A creature may make an endurance check to resist bleed (any creature may default 2 against this skill) at the start of their turn. Any unresisted bleed stacks deal 1 damage at the end of that creatures turn. All resisted stacks are removed immediately (at least 1 stack is always removed after damage is delt).", prerequisites: "Crippling Strike")
sk_powerstrike = SkillTemplate.create(name: "Power Strike", skill_type: "Basic", duration: 0, cooldown: 3, description: "Subtract 2 accuracy from a melee attack to deal 2 additional dmg. Must be declared before attacking.", prerequisites: nil)
sk_devestatingstrike = SkillTemplate.create(name: "Devestating Strike", skill_type: "Basic", duration: 0, cooldown: 3, description: "Subtract 4 accuracy from a melee attack to deal 4 additional dmg. Must be declared before attacking. On a successful hit, the target is Stunned.", prerequisites: "Power Strike")
sk_apocalypsestrike = SkillTemplate.create(name: "Apocalypse Strike", skill_type: "Defining", duration: 0, cooldown: 3, description: "Subtract 2 accuracy from a melee attack. This attack deals 4 additional dmg to the target on a hit. On a hit, all creatures/objects within 2 spaces are targeted by the same attack. The target of the attack becomes paralyzed. All creatures within 2 spaces become stunned, even on a miss.", prerequisites: "Devestating Strike")
sk_technomancy = SkillTemplate.create(name: "Technomancy", skill_type: "Passive", duration: nil, cooldown: nil, description: "Recieve a bonus when using a shield. Add 1 to the capacity of the shield.", prerequisites: nil)
sk_supportdrone = SkillTemplate.create(name: "Support Drone", skill_type: "Basic", duration: 0, cooldown: 3, description: "You may activate a support drone in any space adjacent to you. A support drone follows one character and provides one of two bonuses: +2 shield capacity or +2 accuracy. The support drone can move 2 spaces per turn, and follows its assigned target. The mode may only be changed on your turn, and only once per turn. Support drones have 1 armor, and 6 HP. Support drones to not take actions.", prerequisites: "Technomancy")
sk_medicalsuite = SkillTemplate.create(name: "Medical Suite", skill_type: "Upgrade", duration: nil, cooldown: 3, description: "If the support drone is adjacent to it's target it can perform a heal for 2 HP. If it provides a heal on your turn. If it provides a heal, it does not provide any other bonus until the start of your next turn.", prerequisites: "Support Drone")
sk_defribulationcontacts = SkillTemplate.create(name: "Defribulation Contacts", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may use your action to revive the character targeted by the support drone. That character revives at 2 HP. The support drone does not provide any bonus on a turn this is used.", prerequisites: "Medical Suite")
sk_assaultdrone = SkillTemplate.create(name: "Assault Drone", skill_type: "Basic", duration: 0, cooldown: 3, description: "You may activate an assault drone in any space adjacent to you. An assault drone attacks either your target, or (if you don't have a target) the closest enemy. It has an accuracy of 3 and a damage of 2. With range 5. The assault drone may move 4 spaces per turn. Assault Drones have 2 armor, and 10 HP.", prerequisites: "Technomancy")
sk_heavyloadout = SkillTemplate.create(name: "Heavy Loadout", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "The assault drone's damage increases to 3", prerequisites: "Assault Drone")
sk_twincannons = SkillTemplate.create(name: "Twin Cannons", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "The assault drone gains Rapid (2) Recoil (1)", prerequisites: "Assault Drone")
sk_incindiaryloadout = SkillTemplate.create(name: "Incindiary Loadout", skill_type: "Upgrade", duration: nil, cooldown: 3, description: "The assault drone may blanket an area in flame. A cone shaped area adjacent to the drone is effected. Deal Fire 3 to all creatures within a cone of length 1 projecting from the drone.", prerequisites: "Heavy Loadout")
sk_causticloadout = SkillTemplate.create(name: "Caustic Loadout", skill_type: "Upgrade", duration: nil, cooldown: 3, description: "The assault drone may blanket an area in caustic spray. A cone shaped area adjacent to the drone is effected. Deal Caustic 3 to all creatures within a cone of length 1 projecting from the drone.", prerequisites: "Heavy Loadout")
sk_highvoltageloadout = SkillTemplate.create(name: "High Voltage Loadout", skill_type: "Upgrade", duration: nil, cooldown: 3, description: "The assault drone may blanket an area with a high voltage field. A cone shaped area adjacent to the dron eis effected. Deal Shock 3 to all creatures within a cone of length 1 projecting from the drone.", prerequisites: "Heavy Loadout")
sk_geometrycoprocessor = SkillTemplate.create(name: "Geometry Coprocessor", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Cones of effect projecting from the assault drone have a length of 2.", prerequisites: "Heavy Loadout, Level 5")
sk_projectorarray = SkillTemplate.create(name: "Projector Array", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Cone of effect projecting from teh assault drone have a length of 4.", prerequisites: "Geometry Coprocessor")
sk_remotedeliverysystem = SkillTemplate.create(name: "Remote Delivery System", skill_type: "Advanced", duration: nil, cooldown: 3, description: "When an effect would cause the assault drone to project a cone of elemental damage, the drone may use the RDS system to launch a grenade. The elemental effect is unchaged, but the effect instead targets a radius of 3 within 10 spaces.", prerequisites: "Geometry Coprocessor, Level 8")
sk_autonomy = SkillTemplate.create(name: "Autonomy", skill_type: "Passive", duration: nil, cooldown: nil, description: "The targets of an assault drone may be specified. Additionally, the drone may use the Overwatch ability if it has no valid target.", prerequisites: "Assault Drone")
sk_capacitors = SkillTemplate.create(name: "Capacitors", skill_type: "Passive", duration: nil, cooldown: nil, description: "Drone duration is increased to 5", prerequisites: "Technomancy")
sk_microfusion = SkillTemplate.create(name: "Microfusion", skill_type: "Passive", duration: nil, cooldown: nil, description: "Drone duration is increased to 8", prerequisites: "Technomancy")
sk_multitranseiver = SkillTemplate.create(name: "Multitranseiver", skill_type: "Passive", duration: nil, cooldown: nil, description: "You may have up to 2 drones active at once.", prerequisites: "Technomancy, Level 5")
sk_remotedigistruct = SkillTemplate.create(name: "Remote Digistruct", skill_type: "Passive", duration: nil, cooldown: nil, description: "You may activate a drone up to 5 spaces away from you.", prerequisites: "Technomancy, Level 5")
sk_digistructwiz = SkillTemplate.create(name: "Digistruct Wiz", skill_type: "Passive", duration: nil, cooldown: nil, description: "Activating a drone does not require an action.", prerequisites: "Remote Digistruction")
sk_tacticaldrone = SkillTemplate.create(name: "Tactical Drone", skill_type: "Advanced", duration: 0, cooldown: 3, description: "The tactial drone provides 3 stacks of Tactics. The drone can perform any of the following actions. Flashbang (3 Tactics) - Blinds all in radius 2, Range 8. Net cannon (1 Tactic) - Entangle 1 target, Stun Grenage (2 Tactics) - Slows all in radius 2, Range 8. The tactical drone may move 1 per turn. Tactical Drone has 1 armor and 10 HP", prerequisites: "Digistruct AI")
sk_overload = SkillTemplate.create(name: "Overload", skill_type: "Defining", duration: 0, cooldown: nil, description: "Every active drone gains 3 stacks of power. Each stack of power can be used for the following: +3 to damage or shield bonus, +6 Heal magnitude, +3 Movement, +3 Accuracy, +1 radius. 1 Stack of power can also be used to detonate the drone. Doing this deals 5 damage in a radius 1 area centered on the drone. If there are remaining stacks of power left on the drone at detontation, you must may spend them on the detonation.", prerequisites: "Digistruct Operation")
sk_immediatereaction = SkillTemplate.create(name: "Immediate Reaction", skill_type: "Instant", duration: nil, cooldown: 3, description: "When a foe leaves a space adjacent to you you may make an immediate attack with a melee weapon. ", prerequisites: nil)
sk_parry = SkillTemplate.create(name: "Parry", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may use immediate reaction as a defense if you are targeted with a melee attack. In this case, subtract every hit you score from your opponents hit total. This attack cannot reduce your foes hit total below zero and deals no damage.", prerequisites: "Immediate Reaction")
sk_sirenity = SkillTemplate.create(name: "Sirenity", skill_type: "Free", duration: 0, cooldown: 8, description: "Gain stacks of Sirenity equal to your phase pool. Sirens start with a phase pool of 3. Cooldown begins when all Sirenity is spent. If Sirenity is NOT spent during a turn, lose one Sirenity.", prerequisites: "Siren (Race)")
sk_phasepooling = SkillTemplate.create(name: "Phase Pooling", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When Sirenity is active, gain 1 stack of Sirenity for each turn you spend zero movement.", prerequisites: "Sirenity")
sk_phasestrike = SkillTemplate.create(name: "Phase Strike", skill_type: "Basic", duration: 0, cooldown: 3, description: "You may make a basic melee attack. You may spent a stack of Sirenity to gain +2 to either accuracy or +1 damage. You must declare the amount you are spending on accuracy, but you may choose to spend Sirenity on damage as it is delt.", prerequisites: "Sirenity")
sk_phaselock = SkillTemplate.create(name: "Phase Lock", skill_type: "Basic", duration: 3, cooldown: 5, description: "Select one target within range of Phase Strike. For every stack of Sirenity you spend on Phase Lock, deplete the targets shield by 2. If the target's shield is reduced to zero in this manner, the target is paralyzed for the duration of this skill. The targets shield does not regen while it is phase locked. If the target is immune to paralysis and would be paralyzed, instead deal 1 damage for every stack of Sirenity spent on this skill.", prerequisites: "Phase Strike")
sk_phasejaunt = SkillTemplate.create(name: "Phase Jaunt", skill_type: "Basic", duration: 3, cooldown: 5, description: "Your character may spend only move actions while using Phase Jaunt. You may not be targeted and are uneffected by area effects while Phase Jaunting. When this skill ends you make immediately make a Phase Strike. You may choose to end this skill early. ", prerequisites: "Sirenity")
sk_phasebattery = SkillTemplate.create(name: "Phase Battery", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your phase pool is increased by 3", prerequisites: nil)
sk_phaseshield = SkillTemplate.create(name: "Phase Shield", skill_type: "Basic", duration: 1, cooldown: 3, description: "You may spend 2 stacks of Sirenity to add 1 to your deflect. This effect lasts until the start of your next turn.", prerequisites: "Sirenity")
sk_phaseshift = SkillTemplate.create(name: "Phase Shift", skill_type: "Basic", duration: 0, cooldown: 3, description: "You may spend a point of Sirenity to unlock a door or activate an unlocked terminal. Phase shift does not effect locked terminals.", prerequisites: "Sirenity")
sk_holdphase = SkillTemplate.create(name: "Hold Phase", skill_type: "Advanced", duration: nil, cooldown: nil, description: "You may spend 3 stacks of Sirenity to add 1 to the duration of one of your skills.", prerequisites: "Sirenity, Level 8")
sk_eridiumburn = SkillTemplate.create(name: "Eridium Burn", skill_type: "Basic", duration: 0, cooldown: 3, description: "You may consume 1 Eridium crystal to add an arbitrary amount to any dice pool you would roll. You must declare this before you roll, but you may roll the pool before adding dice. For each die you add to the pool, receive 1 point of damage immediately.", prerequisites: "Sirenity")
sk_incindiaryphase = SkillTemplate.create(name: "Incindiary Phase", skill_type: "Advanced", duration: 3, cooldown: 5, description: "You may spend a number of stacks of Sirenity on Incindiary Phase. If you do, your attacks gain Fire X, where X is half the number of stacks rounded down.", prerequisites: "Sirenity, Level 5")
sk_causticphase = SkillTemplate.create(name: "Caustic Phase", skill_type: "Advanced", duration: 3, cooldown: 5, description: "You may spend a number of stacks of Sirenity on Caustic Phase. If you do, your attacks gain Caustic X, where X is half the number of stacks rounded down.", prerequisites: "Sirenity, Level 5")
sk_shockingphase = SkillTemplate.create(name: "Shocking Phase", skill_type: "Advanced", duration: 3, cooldown: 5, description: "You may spend a number of stacks of Sirenity on Shocking Phase. If you do, your attacks gain Shock X, where X is half the number of stacks rounded down.", prerequisites: "Sirenity, Level 5")
sk_cryogenicphase = SkillTemplate.create(name: "Cryogenic Phase", skill_type: "Advanced", duration: 3, cooldown: 5, description: "You may spend a number of stacks of Sirenity on Cryogenic Phase. If you do, your attacks gain Cryo X, where X is half the number of stacks rounded down.", prerequisites: "Sirenity, Level 8")
sk_phaseburst = SkillTemplate.create(name: "Phase Burst", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may spend a stack of Sirenity to increase the radius of Phase strike by 1. (Radius 0 is a single-target attack, radius 1 effects all adjacent)", prerequisites: "Phase Strike, Level 8")
sk_phasebond = SkillTemplate.create(name: "Phase Bond", skill_type: "Basic", duration: 0, cooldown: nil, description: "Your minion performs the Phase Strike ability. Spend Sirenity as if you were using it.", prerequisites: "Summon Minion, Sirenity, Phase Strike")
sk_telephase = SkillTemplate.create(name: "Telephase", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Phase Strike gains a range of 5. ", prerequisites: "Phase Strike, Level 5")
sk_etherialchains = SkillTemplate.create(name: "Etherial Chains", skill_type: "Advanced", duration: 0, cooldown: 1, description: "Using one stack of Sirenity, create Etherial chains to immobalize all targets in a radius 1. You may spend 2 stacks of Sirenity to increase the radius by 1. The movement of all foes in the area becomes 0. You may spend an additional 2 stacks of Sirenity to instead paralyze all targets. At the start of your turn, you must spend the same amount of Sirenity stacks to maintain the effect or it ends.", prerequisites: "Telephase")
sk_phasesyphon = SkillTemplate.create(name: "Phase Syphon", skill_type: nil, duration: 1, cooldown: 3, description: "For each target you deal damage to in a turn, gain 1 stack of Sirenity. Each target must be non-cybernetic biological creature.", prerequisites: "Phase Strike, Level 5")
sk_sirenegrace = SkillTemplate.create(name: "Sirene Grace", skill_type: "Basic", duration: 0, cooldown: nil, description: "You may spend 1 stack of Sirenity to heal 2 HP to a single adjacent target.", prerequisites: "Sirenity")
sk_angelicgrace = SkillTemplate.create(name: "Angelic Grace", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When you use Sirene Grace, instead heal 4 for each stack of Sirenity spent.", prerequisites: "Sirene Grace")
sk_gracefulaura = SkillTemplate.create(name: "Graceful Aura", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Sirene Grace, you may divide the healing among creatures in radius one instead of adjacent.", prerequisites: "Angelic Grace")
sk_overdrivengrace = SkillTemplate.create(name: "Overdriven Grace", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When you use Sirene Grace, instead heal 6 for each stack of Sirenity spent.", prerequisites: "Angelic Grace, Level 8")
sk_directedgrace = SkillTemplate.create(name: "Directed Grace", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Sirene Grace may effect targets at up to range 5.", prerequisites: "Angelic Grace, Level 5")
sk_phasearmor = SkillTemplate.create(name: "Phase Armor", skill_type: "Basic", duration: 3, cooldown: 5, description: "Spend one stack of Sirenity to grant an adjacent target or yourself gains +2 armor for the duration of this skill.", prerequisites: "Sirenity")
sk_phasereflexes = SkillTemplate.create(name: "Phase Reflexes", skill_type: "Basic", duration: 3, cooldown: 5, description: "Spend on stack of Sirenity to grant an adjacent target or yourself gains +2 circumstance bonus to dodge rolls.", prerequisites: "Sirenity")
sk_finalphase = SkillTemplate.create(name: "Final Phase", skill_type: "Defining", duration: 5, cooldown: 10, description: "During the duration of this skill, any sirenity stacks gained are doubled. Additionally you may spend one stack of sirenity to reduce the damage of any incoming attack by 1. When you use Final Phase, you may also activate Sirenity without using an action. Your Sirenity cap is considered doubled while using this skill.", prerequisites: "Sirenity, Level 12")
sk_assaultturret = SkillTemplate.create(name: "Assault Turret", skill_type: "Basic", duration: 3, cooldown: 5, description: "Select a square adjacent to you. Deploy an assault turret there. The turret gains a turn at the end of the order. On it's turn it makes an attack against the closest target it can hit. The Assault turret attacks with acc 4 and dmg 2. You may only have 1 turrent deployed.", prerequisites: nil)
sk_turretbarrier = SkillTemplate.create(name: "Turret Barrier", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Any character adjacent to your turret recieves a +1 circumstance bonus to deflect.", prerequisites: "Assault Turret")
sk_turretarmor = SkillTemplate.create(name: "Turret Armor", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Deployed turrets gain 1 armor.", prerequisites: "Assault Turret")
sk_extrabarrel = SkillTemplate.create(name: "Extra Barrel", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your Turrets make two attacks against their target.", prerequisites: "Assault Turrent")
sk_supportsystems = SkillTemplate.create(name: "Support Systems", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Characters adjacent to your turret heal 1 point when the turret takes it's action.", prerequisites: "Assault Turret")
sk_improvedoptics = SkillTemplate.create(name: "Improved Optics", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your turret makes attacks with accuracy 6 instead of 4.", prerequisites: "Assault Turret")
sk_extendedpowercell = SkillTemplate.create(name: "Extended Powercell", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Assault Turret durration becomes 5.", prerequisites: "Assault Turret, Level 5")
sk_explosiveshells = SkillTemplate.create(name: "Explosive Shells", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your turret's attacks gain Explosive 2.", prerequisites: "Assault Turret")
sk_turretclamp = SkillTemplate.create(name: "Turret Clamp", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Turrets may be deployed on walls, or ceilings.", prerequisites: "Assault Turret")
sk_longbowsystems = SkillTemplate.create(name: "Longbow Systems", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Turrents may be deployed at range 15.", prerequisites: "Assault Turret, Level 8")
sk_turrentshield = SkillTemplate.create(name: "Turrent Shield", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Turrets gain a shield of deflect 1, capacity 4, recharge 1.", prerequisites: "Assault Turret, Level 5")
sk_grenadesystem = SkillTemplate.create(name: "Grenade System", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Turrets may launch 1 grenade per deployment. They take this action instead of their standard atttack.", prerequisites: "Assault Turret, Level 5")
sk_rocketsystem = SkillTemplate.create(name: "Rocket System", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Turrets may launch up to 3 rockets per deployment. They take this action instead of their standard attack.", prerequisites: "Grenade System")
sk_devestatingdeploy = SkillTemplate.create(name: "Devestating Deploy", skill_type: "Advanced", duration: nil, cooldown: nil, description: "When your turret is delpoyed, deal 5 explosive to all within 5 spaces, and move them 2 in a straight line away from the turret. Your turrent may not act the turn it is deployed.", prerequisites: "Rocket System, Level 8")
sk_lightlyarmored = SkillTemplate.create(name: "Lightly Armored", skill_type: "Passive", duration: nil, cooldown: nil, description: "You may use armor with a weight of up to 1", prerequisites: "")
sk_moderatelyarmored = SkillTemplate.create(name: "Moderately Armored", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may use armor with a weight of up to 2", prerequisites: "Lightly Armored")
sk_heavilyarmored = SkillTemplate.create(name: "Heavily Armored", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You may use armor with a weight up to 3. Your movement is decreased 1 space for every 3 armor. Cannot decrease movement below 1.", prerequisites: "Moderately Armored")
sk_incrediblestrength = SkillTemplate.create(name: "Incredible Strength", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your movement is only decreased 1 space for every 6 armor.", prerequisites: "Heavily Armored")
sk_immovable = SkillTemplate.create(name: "Immovable", skill_type: "Advanced", duration: nil, cooldown: nil, description: "When using armor with a weight 3 or greater, all forced movement is reduced by 1 for every 3 weight.", prerequisites: "Heavily Armored")
sk_walkingtank = SkillTemplate.create(name: "Walking Tank", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "You can use armor of weight 4 or greater.", prerequisites: "Heavily Armored")
sk_digistructplating = SkillTemplate.create(name: "Digistruct Plating", skill_type: "Reaction", duration: 3, cooldown: 5, description: "As an action or reaction, you can digistruct armor plating. This action adds +2 to your current armor rating instantly. This bonus lasts for the duration of the skill.", prerequisites: "Technomancy, Moderately Armored")
sk_shieldlink = SkillTemplate.create(name: "Shield Link", skill_type: "Basic", duration: 3, cooldown: 5, description: "When you are adjacent to an ally, you may use your action to link shields. Linked shields combine capacities, and operate at the higher deflect bonus. Shields operate at the lowest recharge rate.", prerequisites: nil)
sk_shieldbending = SkillTemplate.create(name: "Shieldbending", skill_type: "Basic", duration: 3, cooldown: 5, description: "You may transfer a portion of your shield capacity to an adjacent shielded ally as a reaction. If you or the ally moves non adjacent, this skill enters cooldown", prerequisites: "Shield Link")
sk_shieldmerge = SkillTemplate.create(name: "Shield Merge", skill_type: "Passive", duration: nil, cooldown: nil, description: "You may use 2 shields. Combine their capacities, choose the higher deflect bonus, and the lower recharge rate.", prerequisites: nil)
sk_shieldoverclocking = SkillTemplate.create(name: "Shield Overclocking", skill_type: "Passive", duration: nil, cooldown: nil, description: "Shields you use gain +1 recharge.", prerequisites: nil)
sk_shieldoverload = SkillTemplate.create(name: "Shield Overload", skill_type: "Advanced", duration: nil, cooldown: nil, description: "You may overload your shields to make an attack against all adjacent creatures/objects. For every 2 shield capacity currently remaining in your shields, the attack recieves 2 accuracy and 1 damage. This attack depletes your shields immediately.", prerequisites: "Shield Overclocking")
sk_shieldhardening = SkillTemplate.create(name: "Shield Hardening", skill_type: "Passive", duration: nil, cooldown: nil, description: "Shields you use gain +1 deflect.", prerequisites: nil)
sk_shieldsyphon = SkillTemplate.create(name: "Shield Syphon", skill_type: "Advanced", duration: nil, cooldown: nil, description: "When you hit with a melee attack, you may use Shield Syphon. Remove damage from the targets sheild as normal. For every 2 points depleted, add 1 point to your current shield capacity. This cannot cause your shield capacity to go above it's maximum. If this attack deals no health damage, even if damage points remain after the target's shield is depleted.", prerequisites: "Shield Link")
sk_shieldnode = SkillTemplate.create(name: "Shield Node", skill_type: "Defining", duration: 3, cooldown: 5, description: "When you use this skill you gain your shielding cap (3) stacks of Shielding. Each Stack of shielding depletes BEFORE your standard shield capacity (allowing shield capacity greater than your maximum). As an action, you may shift a number of stacks of shielding from any adjacent ally to yourself, or any other adjacent ally. Targets without shield node cannot have more than their shield node cap (3 by default) stacks of Shielding at a time. ", prerequisites: "Shield Link, Level 5")
sk_shieldtxarray = SkillTemplate.create(name: "Shield TX Array", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Shield Node you may shift Shield stacks from yourself to any target within 5 spaces.", prerequisites: "Shield Node")
sk_shieldrxarray = SkillTemplate.create(name: "Shield RX Array", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Shield Node you may shift Shield stacks to yourself from any target within 5 spaces.", prerequisites: "Shield Node")
sk_shieldbattery = SkillTemplate.create(name: "Shield Battery", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Your shielding cap increases by 3.", prerequisites: "Shield Node")
sk_shieldnexus = SkillTemplate.create(name: "Shield Nexus", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Shield Node you may move stacks directly between targets within 5 spaces. Your shielding cap increases by 3.", prerequisites: "Shield TX Array, Shield RX Array, Level 8")
sk_shieldcontrolvirus = SkillTemplate.create(name: "Shield Control Virus", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Shield Node, you may convert Shield Capacity into stacks of shielding when shifting. This does NOT trigger shield depletion effects if you reduce current capacity to zero, but does trigger recharge delay.", prerequisites: "Shield Node, Level 5")
sk_shieldcoprocessor = SkillTemplate.create(name: "Shield Coprocessor", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "When using Shield Node, you may shift stacks twice per action.", prerequisites: "Shield Node")
sk_shieldwatercooling = SkillTemplate.create(name: "Shield Watercooling", skill_type: "Upgrade", duration: nil, cooldown: nil, description: "Shield Node's Duration increases to 6.", prerequisites: "Shield Node")
pr_acrobatics = ProficiencyTemplate.create(name: "Acrobatics", description: "A flip, skip, and a jump. Acrobatics lets you flex, spring, and leap your way through physical obsticles.", category: "Active")
pr_athletics = ProficiencyTemplate.create(name: "Athletics", description: "Endurance, sprinting, and hanging by your fingernails from that cliff. Athletics measures physical endurance and strength.", category: "Active")
pr_stealth = ProficiencyTemplate.create(name: "Stealth", description: "Stealth is a measure of quick thinking and evasiveness. From walking quietly to ducking behind that boulder just in time, Stealth is a measure of your ability to go unmarked in any manner of situtations", category: "Active")
pr_sleightofhand = ProficiencyTemplate.create(name: "Sleight of Hand", description: "Delicate plants, pickpocketing, shell gaming. Anything that requires perfect coordination and delicate manuvering. Slight of Hand is a measure of your ability to misdirect manually or execute a feather like touch.", category: "Active")
pr_performance = ProficiencyTemplate.create(name: "Performance", description: "Acting, singing, dancing, playing an instrument. Performance is your ability to captivate an audience and entertain the masses.", category: "Active")
pr_explosives = ProficiencyTemplate.create(name: "Explosives", description: "From C4 to improvised ordinance, you are an expert in all things that go boom. You know where to place explosives to deliver maximum compression, shear, and shattering force. Additionally you are aware of the specific chemistry, electronics, and physics required for BOOM.", category: "Expertise")
pr_computersystems = ProficiencyTemplate.create(name: "Computer Systems", description: "Encrypting, Decrypting, Transfering, and Scripting. You know computer operation and exploits. You can make systems behave excellently within their limits, and may even be able to coerce them to act outside their normal parameters.", category: "Expertise")
pr_medicine = ProficiencyTemplate.create(name: "Medicine", description: "Biology, physiology, and trauma experience combine to form medicine. You are experienced as a field medic, and are aware of some more advanced medical proceedures at higher levels. Medicine allows you to stabalize allies and help repair damage done", category: "Expertise")
pr_mechanics = ProficiencyTemplate.create(name: "Mechanics", description: "Gears, force, transmissions, and basic physics. If it is a mechanical system you can probably figure it out. You can understand, create, and modify systems which do work (in the classical sense).", category: "Expertise")
pr_electronics = ProficiencyTemplate.create(name: "Electronics", description: "Current, voltage, and electric fields. You know energy and the paths that cause it to flow. From batteries to diodes, if it's electronic, digital, or analog you can take it apart, put it back together, and wire it up to a power source.", category: "Expertise")
pr_metaphysics = ProficiencyTemplate.create(name: "Metaphysics", description: "Some things don't obey the laws of classical physics. Metaphysics is the primary science behind shields, both personal and vehicular. Bending energy and breaking conservation of energy both fall under metaphysics. Practcally this is the skill you need to construct and modify shields", category: "Expertise")
pr_armorsmithing = ProficiencyTemplate.create(name: "Armorsmithing", description: "You know what bullets can do to various materials. You also know how those materials compete in terms of weight, flexability, and durability. This skill lets to attempt to construct and modify armor.", category: "Expertise")
pr_bladesmithing = ProficiencyTemplate.create(name: "Bladesmithing", description: "Axes, swords, knives. If it holds an edge, you're aware of it's construction and merits. This skill also allows you to craft and repair baded weapons, as well as apply general knowledge.", category: "Expertise")
pr_gunsmithing = ProficiencyTemplate.create(name: "Gunsmithing", description: "Linear mass accelerators. You are aware of the rifling, striking mechanisms, reloading mechanics and other systems that go into constructing a gun. From pistols to assault rilfes you are aware of their construct and performance.", category: "Expertise")
pr_chemistry = ProficiencyTemplate.create(name: "Chemistry", description: "Reactions, poisons, coatings, and drugs. Chemistry lets you construct boosters, injections, and stimulants. Addtionally you can recongize the effects a chemical or compound might have.", category: "Expertise")
pr_academiclore = ProficiencyTemplate.create(name: "Academic Lore", description: "You've studied some. Acadmic lore grants you knowledge about the way something SHOULD work. In theory. It also carries historical information and works of literature with it.", category: "Lore")
pr_culturallore = ProficiencyTemplate.create(name: "Cultural Lore", description: "You're aware of current culture. You're able to blend in with most groups, and posess at least cursory knowledge of accepted behaviors in most subgroups.", category: "Lore")
pr_historicallore = ProficiencyTemplate.create(name: "Historical Lore", description: "If it happened a long time ago, chances are you know about it. Anything from archiology to  ancient wars and cultures. If it's old, you dig it.", category: "Lore")
pr_relgiouslore = ProficiencyTemplate.create(name: "Relgious Lore", description: "Religions, sects, cults, and god. If someone worships something you might be aware of it. You're versed in various scriptures and codes.", category: "Lore")
pr_xenobiology = ProficiencyTemplate.create(name: "Xenobiology", description: "Alien metabolism, biology, structure and intelegence. If it's new and living you're probably reading papers about it. Life on earth is so boring an homogenous. Life among the stars represents real diversity.", category: "Lore")
pr_geology = ProficiencyTemplate.create(name: "Geology", description: "Planetary geology: biomes, rock skill_types, tutonic plates, volcainc pressures and other earth-base phenomina fall squarely in your domain.", category: "Lore")
pr_investigation = ProficiencyTemplate.create(name: "Investigation", description: "You're good at searching, detecting, and finding clues. Anything that requires critical analysis of a scene (often at leasure) is investigation.", category: "Perception")
pr_spotting = ProficiencyTemplate.create(name: "Spotting", description: "Spotting is your ability to quickly notice something. An object from the corner of your eye or a face in the crowd, spotting is the difference between background noise and your target.", category: "Perception")
pr_intuition = ProficiencyTemplate.create(name: "Intuition", description: "Intuition is an innate sense of something. A gut feeling that someone is telling a mistruth, or a sense that something is somehow wrong.", category: "Perception")
pr_negotiation = ProficiencyTemplate.create(name: "Negotiation", description: "Your ability to barter and determine worth are negotiation. Assures a fair deal, or at least enables you to know exactly how much you're being ripped off.", category: "Charisma")
pr_leadership = ProficiencyTemplate.create(name: "Leadership", description: "You can rally others, command, and generally get people to do what you want. So long as you out rank them and they are willing.", category: "Charisma")
pr_persuasion = ProficiencyTemplate.create(name: "Persuasion", description: "A measure of how well you can change someones mind. Oration, debate, and simple conversation all might employ persuasion. ", category: "Charisma")
pr_intimidation = ProficiencyTemplate.create(name: "Intimidation", description: "You're imposing. That alone might let you get away with more than your normally would.", category: "Charisma")
we_basicpistol = WeaponTemplate.create(name: "Basic Pistol",	accuracy: 4, recoil: 0, range: 10, firemode: 0, damage: 1, secondary_damage: nil, cost: 20, description: "A basic weapon")
we_basicrevolver = WeaponTemplate.create(name: "Basic Revolver", accuracy: 3, recoil: 1, range: 15, firemode: 0, damage: 2, secondary_damage: nil, cost: 25, description: "A high powered pistol")
we_smg = WeaponTemplate.create(name: "SMG", accuracy: 2, recoil: 1, range: 10, firemode: 3, damage: 1, secondary_damage: nil, cost: 35, description: "A light, rapid weapon")
we_assaultrifle = WeaponTemplate.create(name: "Assault Rifle", accuracy: 4, recoil: 1, range: 20, firemode: 2, damage: 2, secondary_damage: nil, cost: 50, description: "An assault rifle")
we_sniperrifle = WeaponTemplate.create(name: "Sniper Rifle", accuracy: 5, recoil: 6, range: 100, firemode: 0, damage: 5, secondary_damage: nil, cost: 100, description: "A high powered longarm")
we_rocketlauncher = WeaponTemplate.create(name: "Rocket Launcher", accuracy: 3, recoil: 10, range: 50, firemode: 0, damage: 5, secondary_damage: 5, cost: 250, description: "Shoots explosive rockets. Secondary damage to all within 1 space of target.")
we_shotgun = WeaponTemplate.create(name: "Shotgun", accuracy: 2, recoil: 2, range: 20, firemode: 0, damage: 3, secondary_damage: 3, cost: 100, description: "A scattergun. Secondary damage to target if within 2.")
we_shank = WeaponTemplate.create(name: "Shank", accuracy: 1, recoil: 0, range: 0, firemode: 0, damage: 1, secondary_damage: nil, cost: 5, description: "A sharp length of metal")
we_knife = WeaponTemplate.create(name: "Knife", accuracy: 1, recoil: 0, range: 0, firemode: 0, damage: 2, secondary_damage: nil, cost: 25, description: "A utility knife")
we_vibromachete = WeaponTemplate.create(name: "VibroMachete", accuracy: 2, recoil: 1, range: 0, firemode: 0, damage: 2, secondary_damage: nil, cost: 35, description: "The blade vibrates at ultra high frequencies to slice through most materials")
we_thermokatana = WeaponTemplate.create(name: "ThermoKatana", accuracy: 2, recoil: 4, range: 0, firemode: 0, damage: 4, secondary_damage: nil, cost: 40, description: "The blade heats to high temperatures. Deals 1 point of damage as fire skill_typed")
we_magnahammer = WeaponTemplate.create(name: "MagnaHammer", accuracy: 1, recoil: 5, range: 0, firemode: 0, damage: 7, secondary_damage: nil, cost: 50, description: "A hammer with explosive power")
we_electromace = WeaponTemplate.create(name: "Electromace", accuracy: 3, recoil: 3, range: 0, firemode: 0, damage: 5, secondary_damage: nil, cost: 100, description: "A mace with charged points. Deals 1 damage as shock")
we_impactspear = WeaponTemplate.create(name: "ImpactSpear", accuracy: 4, recoil: 10, range: 0, firemode: 0, damage: 7, secondary_damage: nil, cost: 250, description: "The tip of the spear uses an explosive charge to telescope on impact.")
sh_lightshield = ShieldTemplate.create(name: "Light Shield", capacity: 2, recharge: 1, deflect: 0, cost: 20, description: "A light shield, deflects bullets");
sh_mediumshield = ShieldTemplate.create(name: "Medium Shield", capacity: 3, recharge: 1, deflect: 0, cost: 40, description: "A slight more capacity shield")
sh_heavyshield = ShieldTemplate.create(name: "Heavy Shield", capacity: 5, recharge: 1, deflect: 0, cost: 75, description: "A high capacity shield")
sh_elasticshield = ShieldTemplate.create(name: "Elastic Shield", capacity: 3, recharge: 2, deflect: 1, cost: 100, description: "A shield that deflects bullets")
sh_tankshield = ShieldTemplate.create(name: "Tank Shield", capacity: 7, recharge: 1, deflect: 2, cost: 450, description: "A shield that belongs on a tank")
ar_lightcloth = ArmorTemplate.create(name: "Light Cloth", weight: 0, deflect: 0, cost: "Free", description: "Standard Clothes")
ar_ceramicplates = ArmorTemplate.create(name: "Ceramic plates", weight: 2, deflect: 1, cost: 150, description: "Under-garment plating")
ar_hevsuit = ArmorTemplate.create(name: "HEV Suit", weight: 4, deflect: 0, cost: 350, description: "Heavy Hazardous Environment Suit, provides +2 on Elemental Resistance Checks")
co_healthvial = ConsumableTemplate.create(name: "Health Vial", cost: 50, max_uses: 1, duration: 0, description: "Restores 1d6 health to user")
co_standardgrenade = ConsumableTemplate.create(name: "Standard Grenade", cost: 50, max_uses: 1, duration: 0, description: "Attacks all within 10ft with a pool of 7. Deals base damage of 4 explosive damage. Max range 40ft.")
co_shieldbattery = ConsumableTemplate.create(name: "Shield Battery", cost: 100, max_uses: 1, duration: 0, description: "Instantly recharge 5 points of shield capacity.")
co_electroscope = ConsumableTemplate.create(name: "ElectroScope", cost: 200, max_uses: 1, duration: 1, description: "Identify the properties of an unknown item or machine")
co_adrenalinebooster = ConsumableTemplate.create(name: "Adrenaline Booster", cost: 200, max_uses: 1, duration: 3, description: "Cyborg-only. Requires Auto-injector. +2m movement speed for 3 rounds when health drops below zero. Consumed on activation.")
mi_hawk = MinionTemplate.create(name: "Hawk", hp: 3, armor: 0, shield: 0, speed: 5, actions: "Mark Target (1), Fly By (1)", size: "Small", description: "A fierce, feathered friend who spots targets.")
mi_skag = MinionTemplate.create(name: "Skag", hp: 22, armor: 0, shield: 0, speed: 4, actions: "Bite(1), Spit (2)", size: "Medium", description: "An odd alien pet. Usually more of a pest.")
mi_b3nkr = MinionTemplate.create(name: "B3NKR", hp: 60, armor: 5, shield: 2, speed: "3 (fly)", actions: "Turrets (3), Barriage (5)", size: "Large", description: "A beweaponed flying fortress.")
mi_warloader = MinionTemplate.create(name: "WarLoader", hp: 45, armor: 3, shield: 3, speed: 2, actions: "Cannons (2), Rockets (3)", size: "Large", description: "An armored robot with dual heavy cannons.")
mi_omegaskag = MinionTemplate.create(name: "Omega Skag", hp: 50, armor: 2, shield: 0, speed: 5, actions: "Bite(1), Charge (3)", size: "Large", description: "A large scag.")
Preqrequisite.create(skill_template_id: sk_carefulaim, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_steadyaim, prereq_type: 'skill', prereq_name: 'Careful Aim', value: 'Careful Aim')
Preqrequisite.create(skill_template_id: sk_sniper, prereq_type: 'skill', prereq_name: 'Steady Aim', value: 'Steady Aim')
Preqrequisite.create(skill_template_id: sk_cripplingshot, prereq_type: 'skill', prereq_name: 'Sniper', value: 'Sniper')
Preqrequisite.create(skill_template_id: sk_deadeye, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_deadeye, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_sprayandpray, prereq_type: 'level', prereq_name: 'level', value: 3)
Preqrequisite.create(skill_template_id: sk_itchytriggerfinger, prereq_type: 'skill', prereq_name: 'Spray and Pray', value: 'Spray and Pray')
Preqrequisite.create(skill_template_id: sk_steadyhands, prereq_type: 'skill', prereq_name: 'Itchy Trigger Finger', value: 'Itchy Trigger Finger')
Preqrequisite.create(skill_template_id: sk_cauterize, prereq_type: 'skill', prereq_name: 'Aid', value: 'Aid')
Preqrequisite.create(skill_template_id: sk_defribulatinground, prereq_type: 'skill', prereq_name: 'Cauterize', value: 'Cauterize')
Preqrequisite.create(skill_template_id: sk_summonally, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_summonally, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_summonpatron, prereq_type: 'skill', prereq_name: 'Summon Ally', value: 'Summon Ally')
Preqrequisite.create(skill_template_id: sk_summonpatron, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_minionstrike, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_minionbounce, prereq_type: 'skill', prereq_name: 'Minion Strike', value: 'Minion Strike')
Preqrequisite.create(skill_template_id: sk_minionchain, prereq_type: 'skill', prereq_name: 'Minion Bounce', value: 'Minion Bounce')
Preqrequisite.create(skill_template_id: sk_minionchain, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_minionelement, prereq_type: 'skill', prereq_name: 'Minion Strike', value: 'Minion Strike')
Preqrequisite.create(skill_template_id: sk_igneousminion, prereq_type: 'skill', prereq_name: 'Minion Element', value: 'Minion Element')
Preqrequisite.create(skill_template_id: sk_chargedminion, prereq_type: 'skill', prereq_name: 'Minion Element', value: 'Minion Element')
Preqrequisite.create(skill_template_id: sk_alkalineminion, prereq_type: 'skill', prereq_name: 'Minion Element', value: 'Minion Element')
Preqrequisite.create(skill_template_id: sk_frostedminion, prereq_type: 'skill', prereq_name: 'Minion Element', value: 'Minion Element')
Preqrequisite.create(skill_template_id: sk_slaggingminion, prereq_type: 'skill', prereq_name: 'Minion Element', value: 'Minion Element')
Preqrequisite.create(skill_template_id: sk_minionprime, prereq_type: 'skill', prereq_name: 'Minion Strike', value: 'Minion Strike')
Preqrequisite.create(skill_template_id: sk_minionprime, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_carefulminion, prereq_type: 'skill', prereq_name: 'Minion Strike', value: 'Minion Strike')
Preqrequisite.create(skill_template_id: sk_carefulminion, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_deadlyminion, prereq_type: 'skill', prereq_name: 'Minion Strike', value: 'Minion Strike')
Preqrequisite.create(skill_template_id: sk_deadlyminion, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_beastmaster, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_beastmaster, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_menagerie, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_menagerie, prereq_type: 'skill', prereq_name: ' Leve 5', value: ' Leve 5')
Preqrequisite.create(skill_template_id: sk_synergisticlink, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_synergisticlink, prereq_type: 'level', prereq_name: 'level', value: 3)
Preqrequisite.create(skill_template_id: sk_toughness, prereq_type: 'skill', prereq_name: 'Bulk', value: 'Bulk')
Preqrequisite.create(skill_template_id: sk_musclebound, prereq_type: 'skill', prereq_name: 'Toughness', value: 'Toughness')
Preqrequisite.create(skill_template_id: sk_bastion, prereq_type: 'skill', prereq_name: 'Bulk', value: 'Bulk')
Preqrequisite.create(skill_template_id: sk_ironchurch, prereq_type: 'skill', prereq_name: 'Bastion', value: 'Bastion')
Preqrequisite.create(skill_template_id: sk_flex, prereq_type: 'skill', prereq_name: 'Iron Church', value: 'Iron Church')
Preqrequisite.create(skill_template_id: sk_onehandedwonder, prereq_type: 'skill', prereq_name: 'Bulk', value: 'Bulk')
Preqrequisite.create(skill_template_id: sk_gunzerking, prereq_type: 'skill', prereq_name: 'One handed Wonder', value: 'One handed Wonder')
Preqrequisite.create(skill_template_id: sk_rage, prereq_type: 'skill', prereq_name: 'Toughness', value: 'Toughness')
Preqrequisite.create(skill_template_id: sk_unignorable, prereq_type: 'skill', prereq_name: 'Rage', value: 'Rage')
Preqrequisite.create(skill_template_id: sk_unstoppable, prereq_type: 'skill', prereq_name: 'Rage', value: 'Rage')
Preqrequisite.create(skill_template_id: sk_unbreakable, prereq_type: 'skill', prereq_name: 'Rage', value: 'Rage')
Preqrequisite.create(skill_template_id: sk_hellhathnofury, prereq_type: 'skill', prereq_name: 'Rage', value: 'Rage')
Preqrequisite.create(skill_template_id: sk_hellhathnofury, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_juggernaut, prereq_type: 'skill', prereq_name: 'Unbreakable', value: 'Unbreakable')
Preqrequisite.create(skill_template_id: sk_juggernaut, prereq_type: 'skill', prereq_name: ' Rage', value: ' Rage')
Preqrequisite.create(skill_template_id: sk_juggernaut, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_bullrush, prereq_type: 'skill', prereq_name: 'Tackle', value: 'Tackle')
Preqrequisite.create(skill_template_id: sk_hammerthrow, prereq_type: 'skill', prereq_name: 'Bullrush', value: 'Bullrush')
Preqrequisite.create(skill_template_id: sk_dodge, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_evasive, prereq_type: 'skill', prereq_name: 'Dodge', value: 'Dodge')
Preqrequisite.create(skill_template_id: sk_dexterity, prereq_type: 'skill', prereq_name: 'Evasive', value: 'Evasive')
Preqrequisite.create(skill_template_id: sk_uncannyreflex, prereq_type: 'skill', prereq_name: 'Dodge', value: 'Dodge')
Preqrequisite.create(skill_template_id: sk_sideswipe, prereq_type: 'skill', prereq_name: 'Rush', value: 'Rush')
Preqrequisite.create(skill_template_id: sk_murderchain, prereq_type: 'skill', prereq_name: 'Sideswipe', value: 'Sideswipe')
Preqrequisite.create(skill_template_id: sk_toofasttolive, prereq_type: 'skill', prereq_name: 'Murder Chain', value: 'Murder Chain')
Preqrequisite.create(skill_template_id: sk_canopener, prereq_type: 'skill', prereq_name: 'Piercing Strikes', value: 'Piercing Strikes')
Preqrequisite.create(skill_template_id: sk_piercetheheavens, prereq_type: 'skill', prereq_name: 'Can Opener', value: 'Can Opener')
Preqrequisite.create(skill_template_id: sk_piercetheheavens, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_elementalendurance, prereq_type: 'skill', prereq_name: 'Resistance', value: 'Resistance')
Preqrequisite.create(skill_template_id: sk_hardy, prereq_type: 'level', prereq_name: 'level', value: 3)
Preqrequisite.create(skill_template_id: sk_stoic, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_indominable, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_situationalawareness, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_pickpocket, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_plant, prereq_type: 'skill', prereq_name: 'Pickpocket', value: 'Pickpocket')
Preqrequisite.create(skill_template_id: sk_sneakattack, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_decoy, prereq_type: 'skill', prereq_name: 'Finesse', value: 'Finesse')
Preqrequisite.create(skill_template_id: sk_cripplingstrike, prereq_type: 'skill', prereq_name: 'Sneak Attack', value: 'Sneak Attack')
Preqrequisite.create(skill_template_id: sk_weepingblade, prereq_type: 'skill', prereq_name: 'Crippling Strike', value: 'Crippling Strike')
Preqrequisite.create(skill_template_id: sk_devestatingstrike, prereq_type: 'skill', prereq_name: 'Power Strike', value: 'Power Strike')
Preqrequisite.create(skill_template_id: sk_apocalypsestrike, prereq_type: 'skill', prereq_name: 'Devestating Strike', value: 'Devestating Strike')
Preqrequisite.create(skill_template_id: sk_supportdrone, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_medicalsuite, prereq_type: 'skill', prereq_name: 'Support Drone', value: 'Support Drone')
Preqrequisite.create(skill_template_id: sk_defribulationcontacts, prereq_type: 'skill', prereq_name: 'Medical Suite', value: 'Medical Suite')
Preqrequisite.create(skill_template_id: sk_assaultdrone, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_heavyloadout, prereq_type: 'skill', prereq_name: 'Assault Drone', value: 'Assault Drone')
Preqrequisite.create(skill_template_id: sk_twincannons, prereq_type: 'skill', prereq_name: 'Assault Drone', value: 'Assault Drone')
Preqrequisite.create(skill_template_id: sk_incindiaryloadout, prereq_type: 'skill', prereq_name: 'Heavy Loadout', value: 'Heavy Loadout')
Preqrequisite.create(skill_template_id: sk_causticloadout, prereq_type: 'skill', prereq_name: 'Heavy Loadout', value: 'Heavy Loadout')
Preqrequisite.create(skill_template_id: sk_highvoltageloadout, prereq_type: 'skill', prereq_name: 'Heavy Loadout', value: 'Heavy Loadout')
Preqrequisite.create(skill_template_id: sk_geometrycoprocessor, prereq_type: 'skill', prereq_name: 'Heavy Loadout', value: 'Heavy Loadout')
Preqrequisite.create(skill_template_id: sk_geometrycoprocessor, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_projectorarray, prereq_type: 'skill', prereq_name: 'Geometry Coprocessor', value: 'Geometry Coprocessor')
Preqrequisite.create(skill_template_id: sk_remotedeliverysystem, prereq_type: 'skill', prereq_name: 'Geometry Coprocessor', value: 'Geometry Coprocessor')
Preqrequisite.create(skill_template_id: sk_remotedeliverysystem, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_autonomy, prereq_type: 'skill', prereq_name: 'Assault Drone', value: 'Assault Drone')
Preqrequisite.create(skill_template_id: sk_capacitors, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_microfusion, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_multitranseiver, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_multitranseiver, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_remotedigistruct, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_remotedigistruct, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_digistructwiz, prereq_type: 'skill', prereq_name: 'Remote Digistruction', value: 'Remote Digistruction')
Preqrequisite.create(skill_template_id: sk_tacticaldrone, prereq_type: 'skill', prereq_name: 'Digistruct AI', value: 'Digistruct AI')
Preqrequisite.create(skill_template_id: sk_overload, prereq_type: 'skill', prereq_name: 'Digistruct Operation', value: 'Digistruct Operation')
Preqrequisite.create(skill_template_id: sk_parry, prereq_type: 'skill', prereq_name: 'Immediate Reaction', value: 'Immediate Reaction')
Preqrequisite.create(skill_template_id: sk_phasepooling, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_phasestrike, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_phaselock, prereq_type: 'skill', prereq_name: 'Phase Strike', value: 'Phase Strike')
Preqrequisite.create(skill_template_id: sk_phasejaunt, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_phaseshield, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_phaseshift, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_holdphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_holdphase, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_eridiumburn, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_incindiaryphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_incindiaryphase, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_causticphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_causticphase, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_shockingphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_shockingphase, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_cryogenicphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_cryogenicphase, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_phaseburst, prereq_type: 'skill', prereq_name: 'Phase Strike', value: 'Phase Strike')
Preqrequisite.create(skill_template_id: sk_phaseburst, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_phasebond, prereq_type: 'skill', prereq_name: 'Summon Minion', value: 'Summon Minion')
Preqrequisite.create(skill_template_id: sk_phasebond, prereq_type: 'skill', prereq_name: ' Sirenity', value: ' Sirenity')
Preqrequisite.create(skill_template_id: sk_phasebond, prereq_type: 'skill', prereq_name: ' Phase Strike', value: ' Phase Strike')
Preqrequisite.create(skill_template_id: sk_telephase, prereq_type: 'skill', prereq_name: 'Phase Strike', value: 'Phase Strike')
Preqrequisite.create(skill_template_id: sk_telephase, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_etherialchains, prereq_type: 'skill', prereq_name: 'Telephase', value: 'Telephase')
Preqrequisite.create(skill_template_id: sk_phasesyphon, prereq_type: 'skill', prereq_name: 'Phase Strike', value: 'Phase Strike')
Preqrequisite.create(skill_template_id: sk_phasesyphon, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_sirenegrace, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_angelicgrace, prereq_type: 'skill', prereq_name: 'Sirene Grace', value: 'Sirene Grace')
Preqrequisite.create(skill_template_id: sk_gracefulaura, prereq_type: 'skill', prereq_name: 'Angelic Grace', value: 'Angelic Grace')
Preqrequisite.create(skill_template_id: sk_overdrivengrace, prereq_type: 'skill', prereq_name: 'Angelic Grace', value: 'Angelic Grace')
Preqrequisite.create(skill_template_id: sk_overdrivengrace, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_directedgrace, prereq_type: 'skill', prereq_name: 'Angelic Grace', value: 'Angelic Grace')
Preqrequisite.create(skill_template_id: sk_directedgrace, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_phasearmor, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_phasereflexes, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_finalphase, prereq_type: 'skill', prereq_name: 'Sirenity', value: 'Sirenity')
Preqrequisite.create(skill_template_id: sk_finalphase, prereq_type: 'level', prereq_name: 'level', value: 12)
Preqrequisite.create(skill_template_id: sk_turretbarrier, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_turretarmor, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_extrabarrel, prereq_type: 'skill', prereq_name: 'Assault Turrent', value: 'Assault Turrent')
Preqrequisite.create(skill_template_id: sk_supportsystems, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_improvedoptics, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_extendedpowercell, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_extendedpowercell, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_explosiveshells, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_turretclamp, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_longbowsystems, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_longbowsystems, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_turrentshield, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_turrentshield, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_grenadesystem, prereq_type: 'skill', prereq_name: 'Assault Turret', value: 'Assault Turret')
Preqrequisite.create(skill_template_id: sk_grenadesystem, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_rocketsystem, prereq_type: 'skill', prereq_name: 'Grenade System', value: 'Grenade System')
Preqrequisite.create(skill_template_id: sk_devestatingdeploy, prereq_type: 'skill', prereq_name: 'Rocket System', value: 'Rocket System')
Preqrequisite.create(skill_template_id: sk_devestatingdeploy, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_moderatelyarmored, prereq_type: 'skill', prereq_name: 'Lightly Armored', value: 'Lightly Armored')
Preqrequisite.create(skill_template_id: sk_heavilyarmored, prereq_type: 'skill', prereq_name: 'Moderately Armored', value: 'Moderately Armored')
Preqrequisite.create(skill_template_id: sk_incrediblestrength, prereq_type: 'skill', prereq_name: 'Heavily Armored', value: 'Heavily Armored')
Preqrequisite.create(skill_template_id: sk_immovable, prereq_type: 'skill', prereq_name: 'Heavily Armored', value: 'Heavily Armored')
Preqrequisite.create(skill_template_id: sk_walkingtank, prereq_type: 'skill', prereq_name: 'Heavily Armored', value: 'Heavily Armored')
Preqrequisite.create(skill_template_id: sk_digistructplating, prereq_type: 'skill', prereq_name: 'Technomancy', value: 'Technomancy')
Preqrequisite.create(skill_template_id: sk_digistructplating, prereq_type: 'skill', prereq_name: ' Moderately Armored', value: ' Moderately Armored')
Preqrequisite.create(skill_template_id: sk_shieldbending, prereq_type: 'skill', prereq_name: 'Shield Link', value: 'Shield Link')
Preqrequisite.create(skill_template_id: sk_shieldoverload, prereq_type: 'skill', prereq_name: 'Shield Overclocking', value: 'Shield Overclocking')
Preqrequisite.create(skill_template_id: sk_shieldsyphon, prereq_type: 'skill', prereq_name: 'Shield Link', value: 'Shield Link')
Preqrequisite.create(skill_template_id: sk_shieldnode, prereq_type: 'skill', prereq_name: 'Shield Link', value: 'Shield Link')
Preqrequisite.create(skill_template_id: sk_shieldnode, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_shieldtxarray, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
Preqrequisite.create(skill_template_id: sk_shieldrxarray, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
Preqrequisite.create(skill_template_id: sk_shieldbattery, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
Preqrequisite.create(skill_template_id: sk_shieldnexus, prereq_type: 'skill', prereq_name: 'Shield TX Array', value: 'Shield TX Array')
Preqrequisite.create(skill_template_id: sk_shieldnexus, prereq_type: 'skill', prereq_name: ' Shield RX Array', value: ' Shield RX Array')
Preqrequisite.create(skill_template_id: sk_shieldnexus, prereq_type: 'level', prereq_name: 'level', value: 8)
Preqrequisite.create(skill_template_id: sk_shieldcontrolvirus, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
Preqrequisite.create(skill_template_id: sk_shieldcontrolvirus, prereq_type: 'level', prereq_name: 'level', value: 5)
Preqrequisite.create(skill_template_id: sk_shieldcoprocessor, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
Preqrequisite.create(skill_template_id: sk_shieldwatercooling, prereq_type: 'skill', prereq_name: 'Shield Node', value: 'Shield Node')
